{"version":3,"sources":["Components/Header/logo_elsultan.png","Components/Card/Card.jsx","Components/Header/Header.jsx","Components/Approved/Approved.jsx","serviceWorker.js","Components/Newsletter/Newsletter.jsx","Components/Contador/Contador.jsx","index.js"],"names":["module","exports","Card","props","addCart","document","getElementById","innerHTML","req","XMLHttpRequest","open","data","id","onload","status","window","location","href","alert","send","state","className","alt","src","this","image_product","dangerouslySetInnerHTML","__html","lista","regular_price","price","onClick","React","Component","Header","Promise","resolve","reject","JSON","parse","response","console","table","setState","total","line_total","Error","statusText","logo","slide","Approved","width","height","frameborder","allow","allowfullscreen","Boolean","hostname","match","Newsletter","handleSubmit","bind","event","preventDefault","FormData","target","axios","method","url","nombre","get","correo","then","res","recipes","onSubmit","placeholder","type","name","Contador","countDownDate","Date","getTime","x","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","class","IndexHome","titulo","title","description","image_slide","images","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eecbef09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_elsultan.29a2277c.png\";","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n  };\n}\n\n\n\naddCart =() => {\n\n  document.getElementById(\"por_agregar\").innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> &nbsp; <span>Agregando</span>'; \n      \n  var req = new XMLHttpRequest();\n  req.open('GET', `/?add-to-cart=${this.props.data.id}`);\n\n  req.onload = () => { \n    if (req.status === 200) {\n      // Resolve the promise with the response text\n      window.location.href = 'https://www.manualidadeselsultan.com/finalizar-compra/'; \n                }\n    else {\n     alert(\"Error al agregar producto!\")\n    }\n  };\n\n  req.send();\n\n} \n\n\nrender(){\n  return (\n      <div className=\"row card\">\n        <div className=\"col-xs-12 col-sm-4\">\n          <div className=\"card__image\">\n                <img alt=\"product_image\" className=\"img-responsive\" src={this.props.data.image_product} /> \n          </div>\n        </div>\n        <div className=\"col-xs-12 col-sm-8\">\n          {/* <h2> {this.state.titulo} </h2>*/} \n          <div className=\"card__info\" dangerouslySetInnerHTML={{__html:this.props.data.lista}} />\n          <div className=\"card__version\">\n            <hr/>\n          </div>\n  \n          <div className=\"card__acart\">\n\n            <p> <span>${this.props.data.regular_price}</span> ${this.props.data.price}</p>\n            <button onClick={this.addCart}>\n\n              <div id=\"por_agregar\">\n                <i className=\"fas fa-shopping-cart\"></i> &nbsp; <span>Agregar</span>\n              </div>                                    \n\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n} \n\n}\n\nexport default Card;\n","import React from 'react';\nimport './Header.scss';\nimport logo from './logo_elsultan.png';\n\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {    };\n  }\n\n  \n  componentDidMount() { \n\n    new Promise((resolve, reject) => {\n  \n      var req = new XMLHttpRequest();\n      req.open('GET', '/api_landing/?status=cart');\n      req.onload = () => {\n        \n        if (req.status === 200) {\n          // Resolve the promise with the response text\n\n          var data = JSON.parse(req.response);\n  \n          console.table(data);\n  \n          this.setState({\n                        total: data.line_total\n                      });\n        }\n        else {\n          reject(Error(req.statusText));\n        }\n      };\n  \n      req.send();\n    });\n  }\n  \n\n\n  render(){\n    return (\n        <header> \n          <div className=\"home\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-8\">\n                  <img src={logo} alt=\"\" className=\"img-responsive home__logo\"/>\n                </div>\n                <div className=\"col-xs-4 text-right itemsCart\">\n                  <span className=\"itemsCart__cart\"><i className=\"fas fa-shopping-cart\"></i></span>\n                  <a href=\"./finalizar-comprar\">\n                    <span className=\"itemsCart__pagar\"> <i className=\"fas fa-credit-card\"></i> Pagar ${this.state.total}</span>\n                  </a>\n                </div> \n              </div>\n            </div>\n          </div>\n          <div className=\"container slides\">\n            <div className=\"row slides__animated\">\n              <img className=\"img-responsive\" src={this.props.slide} alt=\"\"/>\n              {/*\n              <div className=\"slides__animated__sa0\">\n                <img src={waves} alt=\"\"/>\n              </div>\n              <div className=\"slides__animated__sa1\">\n                <img className=\"img-responsive\" src={exmicror} alt=\"\"/>\n              </div>\n              <div className=\"slides__animated__sa2\">\n                <h2> ExmicrorÂ® es un desinfectante de origen natural de amplio espectro para manos y superficies. </h2>\n              </div>\n              */}\n            </div>\n          </div>\n        </header>\n    );\n  }\n\n}\n\nexport default Header;\n\n","import React from 'react';\nimport './Approved.scss';\n\nclass Approved extends React.Component {\n\nrender(){\n  return (\n    <section>\n        <div className=\"container logoCertification\">\n            <span className=\"conection\"></span>\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                    <div className=\"carousel\">\n                        <div>\n                            <h3>IMPARTIDO POR LA MAESTRA ESPE</h3>\n                            <h4>Aprende a utilizar los estÃ©nciles para crear efectos dimensionales, luz y sombra.</h4>\n                            <h4> <strong> Te enseÃ±amos cada detalle. </strong> </h4>                                                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> \n        \n        <div className=\"container-fluid video_space\">\n            <div className=\"row\"> \n                <div className=\"col-xs-12 text-center\">\n                    <h3>25 y 26 de marzo de 4:00 p.m a 6:30 p.m <hr/>  </h3>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xs-12 text-center\">\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fqOWkAqfuqo\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>                   \n                    {/* \n                    <h3>Este taller es para ti</h3>\n                    <h4><i>Trabajaremos varias tÃ©cnicas en un solo proyecto: Decoupage, Craquelado y EstÃ©ncil.</i></h4>    \n                    <br/>     \n                    */}                    \n                </div>\n            </div>\n        </div>\n    </section>\n  );\n}\n\n}\n\nexport default Approved;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport './Newsletter.scss';\n\nclass Newsletter extends React.Component {\n\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n        const data = new FormData(event.target);\n                \n        axios({\n            method: 'POST',\n            url: 'https://www.manualidadeselsultan.com/values/crm/sultan/',\n            data: {\n                nombre: data.get('nombre'),\n                correo: data.get('correo')            \n            }\n        })\n        .then(res => this.setState({ recipes: res.data }));\n\n        alert(\"Ya estas suscrito. Gracias.\");\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h4>SUSCRÃBETE</h4>\n                <p>TE LLEGARÃ NUESTRO NEWSLETTER</p>\n                <form onSubmit={this.handleSubmit}>\n                    <input placeholder=\"Nombre\" type=\"text\" name=\"nombre\"/>\n                    <input placeholder=\"Correo ElectrÃ³nico\" type=\"email\" name=\"correo\"/>\n                    <button>Enviar</button>\n                </form>\n            </div>\n        ); \n    }\n}\n\nexport default Newsletter;\n","import React from 'react';\nimport './Contador.scss';\n\nclass Contador extends React.Component {\n\n\n\n    componentDidMount() {          \n// Set the date we're counting down to\nvar countDownDate = new Date(\"Mar 16, 2021 23:59:59\").getTime();\n\n// Update the count down every 1 second\nvar x = setInterval(function() {\n\n  // Get today's date and time\n  var now = new Date().getTime();\n\n  // Find the distance between now and the count down date\n  var distance = countDownDate - now;\n\n  // Time calculations for days, hours, minutes and seconds\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n  // Display the result in the element with id=\"demo\"\n  document.getElementById(\"dias\").innerHTML = days ;\n  document.getElementById(\"horas\").innerHTML = hours;\n  document.getElementById(\"minutos\").innerHTML = minutes;\n  document.getElementById(\"segundos\").innerHTML = seconds ;\n  \n\n\n  // If the count down is finished, write some text\n  if (distance < 0) {\n    clearInterval(x);\n    document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n  }\n\n}, 1000);\n\n    }\n\n\nrender(){\n  return (\n        <div className=\"text-center contador\">\n            <h3> Fecha lÃ­mite de inscripciÃ³n 16 de marzo.</h3>\n             <ul class=\"contiene-tiempo\">\n                <li>\n                    <h3 id=\"dias\"></h3>\n                    <p>DÃ­as</p>\n                </li>\n                <li>\n                    <h3 id=\"horas\"></h3>\n                    <p>Horas</p>\n               </li>\n               <li>\n                  <h3 id=\"minutos\"></h3>\n                  <p>Minutos</p>\n               </li>\n               <li>\n                <h3 id=\"segundos\"></h3>\n                <p>Segundos</p>\n               </li>\n              </ul>\n        </div>\n  );\n}\n\n}\n\nexport default Contador;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Bootstrap/css/bootstrap.css'\nimport './index.scss';\n\nimport Card from './Components/Card/Card';\nimport Header from './Components/Header/Header';\nimport Approved from './Components/Approved/Approved';\n\nimport * as serviceWorker from './serviceWorker';\nimport Newsletter from './Components/Newsletter/Newsletter';\nimport Contador from './Components/Contador/Contador';\n\n\nclass IndexHome extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {    };\n  }\n\n  componentDidMount() { \n\n    new Promise((resolve, reject) => { \n  \n      var req = new XMLHttpRequest();\n  \n      req.open('GET', `https://www.blanya.com/api_v2/landing.php?id=12715`); \n  \n      req.onload = () => { \n        \n        if (req.status === 200) {\n          // Resolve the promise with the response text\n          var data = JSON.parse(req.response);\n  \n          //console.table(data);\n  \n          this.setState({ \n                        id: data.id,\n                        titulo: data.title,\n                        lista: data.description,\n                        image_slide: data.images[1].src,\n                        image_product: data.images[0].src,\n                        regular_price : data.regular_price, \n                        price: data.price\n                      });\n                    }\n        else {\n          reject(Error(req.statusText));\n        }\n      };\n  \n      req.send();\n    });\n  }\n\n   \n  render(){\n    return (\n      <section>       \n      <Header slide={this.state.image_slide}/>\n      <Approved />\n      <div className=\"container\">\n        <Card data={this.state}/>\n      </div>\n      <Contador/>\n      </section>\n    );\n\n    }\n}\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <IndexHome/>\n\n    <footer>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-sm-9\"> \n            <h2>Â¡Cupos limitados, inscrÃ­bete Ya!  </h2>\n            <h4>El precio del taller incluye todo el material para la elaboraciÃ³n del retablo.  Envio gratuito a todo Mexico.</h4>\n            <h4>Â¡No hay excusas, compra ahora!</h4>\n            <hr></hr>\n          </div>\n          <div className=\"col-xs-12 col-sm-3\"> \n            <Newsletter/>\n          </div>\n        </div>\n      </div>\n    </footer>\n\n  \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n{/*\n    <div className=\"container images_middle\">\n      <div className=\"row text-center\">\n        <div className=\"col-xs-12\">\n            <h4>Â¡Cupos limitados, inscrÃ­bete Ya!</h4>\n            <div className=\"col-xs-6 text-right\">\n                <img src=\"https://www.manualidadeselsultan.com/wp-content/uploads/2020/11/cja01.jpeg\" alt=\"\" className=\"img-responsive\"/>\n            </div> \n            <div className=\"col-xs-6 text-left\">\n                    <img src=\"https://www.manualidadeselsultan.com/wp-content/uploads/2020/11/cja02.jpeg\" alt=\"\" className=\"img-responsive\"/>                     \n            </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <ul className=\"listaBene\">\n            <li>â¢ Son flexibles por lo que, se adaptan a superficies curvas.</li>\n            <li>â¢ Se logran proyectos muy originales con estÃ©nciles y sellos.</li>\n            <li>â¢ Sobre ellos se puede pegar servilleta o papel usando Medium para Decoupage y hacer distintas texturas con nuestra pasta 3D.</li>\n            <li>â¢ AdemÃ¡s, son resistentes al calor logrando hacer proyectos funcionales para tu hogar.</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n*/}\n\n\n//<Card producto={11646} filter={'variants'} activeIndex={'125-ml'}/>\n//<CardSingle producto={11657} filter={'single'}/>\n//<Card producto={11660} filter={'variants'} activeIndex={'kit-1'}/>\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}