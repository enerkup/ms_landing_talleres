{"version":3,"sources":["Components/Header/logo_elsultan.png","Components/Card/CardSingle.jsx","Components/Card/Card.jsx","Components/Header/Header.jsx","Components/Approved/Approved.jsx","serviceWorker.js","index.js"],"names":["module","exports","CardSingle","props","addCart","req","XMLHttpRequest","open","state","id","onload","document","getElementById","innerHTML","status","window","location","href","alert","send","Promise","resolve","reject","producto","data","JSON","parse","response","setState","titulo","title","lista","description","image","images","src","regular_price","price","Error","statusText","className","alt","this","dangerouslySetInnerHTML","__html","onClick","React","Component","Header","console","table","total","line_total","logo","Approved","Boolean","hostname","match","ReactDOM","render","StrictMode","filter","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2a64f729.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_elsultan.29a2277c.png\";","import React from 'react';\nimport './Card.scss';\n\nclass CardSingle extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n  };\n}\n\n\ncomponentDidMount() {\n\n  new Promise((resolve, reject) => { \n\n    var req = new XMLHttpRequest();\n\n    req.open('GET', `https://www.blanya.com/api_v2/product.php?id=${this.props.producto}`); \n\n    req.onload = () => { \n      \n      if (req.status === 200) {\n        // Resolve the promise with the response text\n        var data = JSON.parse(req.response);\n\n        //console.table(data);\n\n        this.setState({ \n                      id: data.id,\n                      titulo: data.title,\n                      lista: data.description,\n                      image: data.images[0].src,\n                      regular_price : data.regular_price, \n                      price: data.price\n                    });\n                  }\n      else {\n        reject(Error(req.statusText));\n      }\n    };\n\n    req.send();\n  });\n}\n \n\naddCart =() => {\n  //https://www.manualidadeselsultan.com/?add-to-cart=11646&variation_id=11648&quantity=3\n  \n  var req = new XMLHttpRequest();\n  req.open('GET', `/?add-to-cart=${this.state.id}`);\n\n  req.onload = () => { \n\n    document.getElementById(\"por_agregar\").innerHTML = '<i className=\"fas fa-spinner fa-spin\"></i> &nbsp; <span>Agregando</span>'; \n      \n    if (req.status === 200) {\n      // Resolve the promise with the response text\n\n      window.location.href = 'https://www.manualidadeselsultan.com/carrito/';\n\n                }\n    else {\n     alert(\"Error al agregar producto!\")\n    }\n  };\n\n  req.send();\n\n} \n\n\nrender(){\n  return (\n      <div className=\"row card\">\n        <div className=\"col-xs-12 col-sm-4\">\n          <div className=\"card__image\">\n                <img alt=\"product_image\" className=\"img-responsive\" src={this.state.image} /> \n          </div>\n        </div>\n        <div className=\"col-xs-12 col-sm-8\">\n          {/* <h2> {this.state.titulo} </h2>*/} \n          <div className=\"card__info\" dangerouslySetInnerHTML={{__html:this.state.lista}} />\n          <div className=\"card__version\">\n            <hr/>\n          </div>\n  \n          <div className=\"card__acart\">\n\n            <p> <span>${this.state.regular_price}</span> ${this.state.price}</p>\n            <button onClick={this.addCart}>\n\n              <div id=\"por_agregar\">\n                <i className=\"fas fa-shopping-cart\"></i> &nbsp; <span>Agregar</span>\n              </div>                                    \n\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n} \n\n}\n\nexport default CardSingle;\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    activeAtributo: this.props.activeIndex,\n    variations: []\n  };\n}\n\n\ncomponentDidMount() {\n\n  new Promise((resolve, reject) => {\n\n    var req = new XMLHttpRequest();\n    req.open('GET', `/api_landing/?status=${this.props.filter}&product_id=${this.props.producto}`);\n    req.onload = () => {\n      \n      if (req.status === 200) {\n        // Resolve the promise with the response text\n        var data = JSON.parse(req.response);\n\n        console.table(data);\n\n        var index = data.variations.map(function(e) { return e.atributo; }).indexOf(this.props.activeIndex);\n\n        var price = data['variations'][index].price;\n        var dataVariation = data['variations'][index].variation_id;\n\n\n        this.setState({\n                      id: data.id,\n                      titulo: data.title,\n                      lista: data.description,\n                      variations: data.variations,\n                      image: data.image,\n                      \n                      price: price,\n                      dataVariation: dataVariation \n\n                    });\n                  }\n      else {\n        reject(Error(req.statusText));\n      }\n    };\n\n    req.send();\n  });\n}\n\ncambioProducto = (e) => {\n    \n    var key = e.target.getAttribute(\"data-atributo\");\n    var price = e.target.getAttribute(\"data-price\");\n    var dataVariation = e.target.getAttribute(\"data-variation\");\n    this.setState({price:price, activeAtributo: key, dataVariation:dataVariation});\n   \n}\n\naddCart =() => {\n  //https://manualidadeselsultan.com/?add-to-cart=11646&variation_id=11648&quantity=3\n  \n  var req = new XMLHttpRequest();\n  req.open('GET', `/?add-to-cart=${this.state.id}&variation_id=${this.state.dataVariation}&quantity=1`);\n  req.send();\n\n  alert(\"Producto Agregado\");\n  window.location.reload(false);\n\n}\n\n\nrender(){\n  return ( \n      <div className=\"row card\">\n        <div className=\"col-xs-12 col-sm-4\">\n          <div className=\"card__image\">\n            {this.state.variations.map((variation) => <div className={variation.atributo === this.state.activeAtributo ? '' : 'hidden'} key={variation.atributo}> \n                                                             <img alt=\"product_image\" className=\"img-responsive\" src={variation.image} /> \n                                                      </div>)}\n          </div> \n        </div>\n        <div className=\"col-xs-12 col-sm-8\">\n          <h2> {this.state.titulo} {this.state.activeAtributo}</h2> \n          <div className=\"card__info\" dangerouslySetInnerHTML={{__html:this.state.lista}} />\n          <div className=\"card__version\">\n            <hr/>\n            <h4>Selecciona: </h4>\n            {this.state.variations.map((variation) =>  <button  onClick={this.cambioProducto}\n                                                                className={variation.atributo === this.state.activeAtributo ? 'selected' : ''} \n                                                                data-atributo={variation.atributo} \n                                                                data-price={variation.price}\n                                                                data-variation={variation.variation_id}\n                                                                key={variation.atributo}>  {variation.atributo} \n                                                        </button>)}\n          </div>\n  \n          <div className=\"card__acart\">\n            <p>${this.state.price}</p>\n            <button onClick={this.addCart}>\n              <i className=\"fas fa-shopping-cart\"></i> &nbsp; <span>Agregar</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n} \n\n}\n\nexport default Card;\n\n//componentWillUnmount() {}\n \n//componentShouldUpdate() {}\n","import React from 'react';\nimport './Header.scss';\nimport logo from './logo_elsultan.png';\n\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {    };\n  }\n\n  \n  componentDidMount() { \n\n    new Promise((resolve, reject) => {\n  \n      var req = new XMLHttpRequest();\n      req.open('GET', '/api_landing/?status=cart');\n      req.onload = () => {\n        \n        if (req.status === 200) {\n          // Resolve the promise with the response text\n\n          var data = JSON.parse(req.response);\n  \n          console.table(data);\n  \n          this.setState({\n                        total: data.line_total\n                      });\n        }\n        else {\n          reject(Error(req.statusText));\n        }\n      };\n  \n      req.send();\n    });\n  }\n  \n\n\n  render(){\n    return (\n        <header> \n          <div className=\"home\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-8\">\n                  <img src={logo} alt=\"\" className=\"img-responsive home__logo\"/>\n                </div>\n                <div className=\"col-xs-4 text-right itemsCart\">\n                  <span className=\"itemsCart__cart\"><i className=\"fas fa-shopping-cart\"></i></span>\n                  <a href=\"./finalizar-comprar\">\n                    <span className=\"itemsCart__pagar\"> <i className=\"fas fa-credit-card\"></i> Pagar ${this.state.total}</span>\n                  </a>\n                </div> \n              </div>\n            </div>\n          </div>\n          <div className=\"container slides\">\n            <div className=\"row slides__animated\">\n              <img className=\"img-responsive\" src=\"https:\\/\\/www.manualidadeselsultan.com\\/wp-content\\/uploads\\/2021\\/02\\/BannerLanding_opt.jpg\" alt=\"\"/>\n              {/*\n              <div className=\"slides__animated__sa0\">\n                <img src={waves} alt=\"\"/>\n              </div>\n              <div className=\"slides__animated__sa1\">\n                <img className=\"img-responsive\" src={exmicror} alt=\"\"/>\n              </div>\n              <div className=\"slides__animated__sa2\">\n                <h2> Exmicror® es un desinfectante de origen natural de amplio espectro para manos y superficies. </h2>\n              </div>\n              */}\n            </div>\n          </div>\n        </header>\n    );\n  }\n\n}\n\nexport default Header;\n\n","import React from 'react';\nimport './Approved.scss';\n\nclass Approved extends React.Component {\n\nrender(){\n  return (\n    <section>\n        <div className=\"container logoCertification\">\n            <span className=\"conection\"></span>\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                    <div className=\"carousel\">\n                        <div>\n                            <h4>IMPARTIDO POR LA MESTRA JOSSY</h4>\n                            <h3> Vamos a decorar juntos este <strong> ¡lindo Reloj en Collage! </strong> Te enseñamos cada detalle. </h3>                                                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>  \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-xs-12 text-center\">\n                    <h3>Este taller es para ti</h3>\n                    <h4><i>Trabajaremos varias técnicas en un solo proyecto: Decoupage, Craquelado y Esténcil.</i></h4>    \n                    <br/>                                    \n                </div>\n            </div>\n        </div>  \n    </section>\n  );\n}\n\n}\n\nexport default Approved;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Bootstrap/css/bootstrap.css'\nimport './index.scss';\n\nimport CardSingle from './Components/Card/CardSingle';\nimport Card from './Components/Card/Card';\nimport Header from './Components/Header/Header';\nimport Approved from './Components/Approved/Approved';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Approved />\n    <div className=\"container\">\n      \n      <CardSingle producto={12431} filter={'single'}/>\n      \n    </div>\n\n    \n\n{/*\n    <div className=\"container images_middle\">\n      <div className=\"row text-center\">\n        <div className=\"col-xs-12\">\n            <h4>¡Cupos limitados, inscríbete Ya!</h4>\n            <div className=\"col-xs-6 text-right\">\n                <img src=\"https://www.manualidadeselsultan.com/wp-content/uploads/2020/11/cja01.jpeg\" alt=\"\" className=\"img-responsive\"/>\n            </div> \n            <div className=\"col-xs-6 text-left\">\n                    <img src=\"https://www.manualidadeselsultan.com/wp-content/uploads/2020/11/cja02.jpeg\" alt=\"\" className=\"img-responsive\"/>                     \n            </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <ul className=\"listaBene\">\n            <li>• Son flexibles por lo que, se adaptan a superficies curvas.</li>\n            <li>• Se logran proyectos muy originales con esténciles y sellos.</li>\n            <li>• Sobre ellos se puede pegar servilleta o papel usando Medium para Decoupage y hacer distintas texturas con nuestra pasta 3D.</li>\n            <li>• Además, son resistentes al calor logrando hacer proyectos funcionales para tu hogar.</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n*/}\n\n    <footer>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\"> \n            <h2>¡Cupos limitados, inscríbete Ya!  </h2>\n            <h4>El precio del taller incluye todo el material para la elaboración de la caja. Envio gratuito a todo Mexico.</h4>\n            <h4>¡No hay excusas, compra ahora!</h4>\n          </div>\n        </div>\n      </div>\n    </footer>\n\n    \n\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//<Card producto={11646} filter={'variants'} activeIndex={'125-ml'}/>\n//<CardSingle producto={11657} filter={'single'}/>\n//<Card producto={11660} filter={'variants'} activeIndex={'kit-1'}/>\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}